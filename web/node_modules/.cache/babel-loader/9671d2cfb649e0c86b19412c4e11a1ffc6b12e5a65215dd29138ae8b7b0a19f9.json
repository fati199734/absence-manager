{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api/'\n});\n\n// Interceptor pour ajouter le token JWT à chaque requête\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Interceptor pour rafraîchir le token automatiquement si 401\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response && error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refresh = localStorage.getItem('refresh_token');\n      if (refresh) {\n        const res = await axios.post('http://localhost:8000/api/token/refresh/', {\n          refresh\n        });\n        localStorage.setItem('access_token', res.data.access);\n        originalRequest.headers['Authorization'] = 'Bearer ' + res.data.access;\n        return api(originalRequest);\n      }\n    } catch (e) {\n      // Token refresh failed, logout\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      window.location.href = '/';\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","originalRequest","status","_retry","refresh","res","post","setItem","data","access","e","removeItem","window","location","href"],"sources":["C:/Users/admin/Desktop/test/web/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8000/api/',\r\n});\r\n\r\n// Interceptor pour ajouter le token JWT à chaque requête\r\napi.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      config.headers['Authorization'] = 'Bearer ' + token;\r\n    }\r\n    return config;\r\n  },\r\n  error => Promise.reject(error)\r\n);\r\n\r\n// Interceptor pour rafraîchir le token automatiquement si 401\r\napi.interceptors.response.use(\r\n  response => response,\r\n  async error => {\r\n    const originalRequest = error.config;\r\n    if (error.response && error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      try {\r\n        const refresh = localStorage.getItem('refresh_token');\r\n        if (refresh) {\r\n          const res = await axios.post('http://localhost:8000/api/token/refresh/', { refresh });\r\n          localStorage.setItem('access_token', res.data.access);\r\n          originalRequest.headers['Authorization'] = 'Bearer ' + res.data.access;\r\n          return api(originalRequest);\r\n        }\r\n      } catch (e) {\r\n        // Token refresh failed, logout\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('refresh_token');\r\n        window.location.href = '/';\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGH,KAAK;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDK,KAAK,IAAIC,OAAO,CAACC,MAAM,CAACF,KAAK,CAC/B,CAAC;;AAED;AACAX,GAAG,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC3BS,QAAQ,IAAIA,QAAQ,EACpB,MAAMH,KAAK,IAAI;EACb,MAAMI,eAAe,GAAGJ,KAAK,CAACL,MAAM;EACpC,IAAIK,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC9EF,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMC,OAAO,GAAGV,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MACrD,IAAIS,OAAO,EAAE;QACX,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,0CAA0C,EAAE;UAAEF;QAAQ,CAAC,CAAC;QACrFV,YAAY,CAACa,OAAO,CAAC,cAAc,EAAEF,GAAG,CAACG,IAAI,CAACC,MAAM,CAAC;QACrDR,eAAe,CAACL,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGS,GAAG,CAACG,IAAI,CAACC,MAAM;QACtE,OAAOvB,GAAG,CAACe,eAAe,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOS,CAAC,EAAE;MACV;MACAhB,YAAY,CAACiB,UAAU,CAAC,cAAc,CAAC;MACvCjB,YAAY,CAACiB,UAAU,CAAC,eAAe,CAAC;MACxCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;IAC5B;EACF;EACA,OAAOhB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}